{
  "name": "🧪 TESTE - Airdrops DeFiLlama",
  "nodes": [
    {
      "parameters": {},
      "id": "manual-trigger",
      "name": "🚀 Iniciar Teste Manual",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "url": "https://SEU-APP.onrender.com/health",
        "options": {}
      },
      "id": "test-health",
      "name": "1️⃣ Testar Health Check",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 200]
    },
    {
      "parameters": {
        "url": "https://SEU-APP.onrender.com/n8n/best-airdrops",
        "options": {
          "queryParametersUi": {
            "parameter": [
              {
                "name": "limit",
                "value": "3"
              }
            ]
          }
        }
      },
      "id": "test-airdrops",
      "name": "2️⃣ Buscar 3 Melhores Airdrops",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "https://SEU-APP.onrender.com/api/airdrops",
        "options": {}
      },
      "id": "test-all",
      "name": "3️⃣ Buscar Todos Airdrops",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 400]
    },
    {
      "parameters": {
        "jsCode": "// Testar se Health Check funcionou\nconst healthData = $input.first().json;\n\nconsole.log('🏥 HEALTH CHECK:', healthData);\n\nif (healthData.status === 'online') {\n  return {\n    test: '✅ Health Check',\n    status: 'PASSOU',\n    data: healthData\n  };\n} else {\n  return {\n    test: '❌ Health Check',\n    status: 'FALHOU',\n    error: 'API offline'\n  };\n}"
      },
      "id": "process-health",
      "name": "🔍 Analisar Health",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 200]
    },
    {
      "parameters": {
        "jsCode": "// Testar dados dos airdrops\nconst airdropsData = $input.first().json;\n\nconsole.log('🚀 AIRDROPS DATA:', airdropsData);\n\nif (airdropsData.success && airdropsData.airdrops && airdropsData.airdrops.length > 0) {\n  const airdrops = airdropsData.airdrops;\n  \n  console.log(`📊 Encontrados ${airdrops.length} airdrops`);\n  \n  // Criar resumo\n  let resumo = `✅ API FUNCIONANDO!\\n\\n`;\n  resumo += `📈 Total: ${airdrops.length} airdrops\\n`;\n  resumo += `🕐 Atualizado: ${airdropsData.updated}\\n\\n`;\n  \n  resumo += `🏆 TOP AIRDROPS:\\n`;\n  airdrops.forEach((airdrop, index) => {\n    resumo += `${index + 1}. ${airdrop.name}\\n`;\n    resumo += `   💰 ${airdrop.value}\\n`;\n    resumo += `   ⛓️ ${airdrop.chain}\\n`;\n    resumo += `   📊 ${airdrop.status}\\n\\n`;\n  });\n  \n  return {\n    test: '✅ Airdrops API',\n    status: 'PASSOU',\n    resumo: resumo,\n    count: airdrops.length,\n    airdrops: airdrops\n  };\n} else {\n  return {\n    test: '❌ Airdrops API',\n    status: 'FALHOU',\n    error: 'Dados inválidos ou vazios',\n    data: airdropsData\n  };\n}"
      },
      "id": "process-airdrops",
      "name": "🔍 Analisar Airdrops",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Testar lista completa\nconst allData = $input.first().json;\n\nconsole.log('📋 ALL AIRDROPS:', allData);\n\nif (allData.success && allData.total > 0) {\n  return {\n    test: '✅ Lista Completa',\n    status: 'PASSOU',\n    total: allData.total,\n    lastUpdate: allData.lastUpdate\n  };\n} else {\n  return {\n    test: '❌ Lista Completa',\n    status: 'FALHOU',\n    error: 'Lista vazia ou erro'\n  };\n}"
      },
      "id": "process-all",
      "name": "🔍 Analisar Lista Completa",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 400]
    },
    {
      "parameters": {
        "jsCode": "// Compilar relatório final de todos os testes\nconst allInputs = $input.all();\n\nlet relatorio = '🧪 RELATÓRIO DE TESTES - MCP DEFILLAMA\\n';\nrelatorio += '=' .repeat(50) + '\\n\\n';\n\nallInputs.forEach((input, index) => {\n  const data = input.json;\n  relatorio += `${data.test}: ${data.status}\\n`;\n  \n  if (data.status === 'PASSOU') {\n    if (data.resumo) {\n      relatorio += data.resumo + '\\n';\n    } else if (data.total) {\n      relatorio += `   📊 Total de itens: ${data.total}\\n`;\n    }\n  } else {\n    relatorio += `   ❌ Erro: ${data.error}\\n`;\n  }\n  \n  relatorio += '\\n';\n});\n\nrelatorio += '🔗 SUA API: https://SEU-APP.onrender.com\\n';\nrelatorio += '📱 Para N8N: https://SEU-APP.onrender.com/n8n/best-airdrops?limit=5\\n\\n';\nrelatorio += '🤖 Teste realizado via N8N';\n\nconsole.log('📄 RELATÓRIO COMPLETO:');\nconsole.log(relatorio);\n\nreturn {\n  relatorio: relatorio,\n  timestamp: new Date().toISOString(),\n  testes_executados: allInputs.length\n};"
      },
      "id": "final-report",
      "name": "📄 Relatório Final",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    }
  ],
  "connections": {
    "🚀 Iniciar Teste Manual": {
      "main": [
        [
          {
            "node": "1️⃣ Testar Health Check",
            "type": "main",
            "index": 0
          },
          {
            "node": "2️⃣ Buscar 3 Melhores Airdrops",
            "type": "main",
            "index": 0
          },
          {
            "node": "3️⃣ Buscar Todos Airdrops",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1️⃣ Testar Health Check": {
      "main": [
        [
          {
            "node": "🔍 Analisar Health",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2️⃣ Buscar 3 Melhores Airdrops": {
      "main": [
        [
          {
            "node": "🔍 Analisar Airdrops",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "3️⃣ Buscar Todos Airdrops": {
      "main": [
        [
          {
            "node": "🔍 Analisar Lista Completa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔍 Analisar Health": {
      "main": [
        [
          {
            "node": "📄 Relatório Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔍 Analisar Airdrops": {
      "main": [
        [
          {
            "node": "📄 Relatório Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔍 Analisar Lista Completa": {
      "main": [
        [
          {
            "node": "📄 Relatório Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "id": "test",
      "name": "teste"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}